// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

// Bảng loại người dùng
model User_Type {
  id             BigInt         @id @default(autoincrement())
  user_type_name String
  is_active      Boolean        @default(true)
  is_delete      Boolean        @default(false)
  create_date    DateTime?
  create_user    String?
  update_date    DateTime?
  update_user    String?
  delete_date    DateTime?
  delete_user    String?
  account        User_Account[]
}

// Bảng tài khoản
model User_Account {
  id                BigInt              @id @default(autoincrement())
  password          String
  username          String
  // user_type_id Int
  google_id         Int?
  is_active         Boolean             @default(true)
  is_delete         Boolean             @default(false)
  create_date       DateTime            @default(now())
  user_type         User_Type           @relation(fields: [user_type_id], references: [id])
  user_type_id      BigInt
  first_name        String?
  last_name         String?
  full_name         String?
  email             String?
  number_phone      String?
  age               Int?
  gender            Int?
  address           String?
  province_code     String?
  district_code     String?
  ward_code         String?
  avartar           String?
  logo              String?
  profile           Apply_Profile[]
  post              Recruitment_Post[]
  cv                cv[]
  History_Apply_Job History_Apply_Job[]
}

// Bảng người dùng ứng viên
// model User_Candidate {
//   id BigInt  @id @default(autoincrement())
//   company_name String  @unique
//   first_name   String
//   last_name    String
//   full_name    String
//   email        String?
//   number_phone String?
//   age          Int?
//   gender       Int?
//   address      String?
//   city_id      Int?
//   district_id  Int?
//   ward_id      Int?
//   avartar      String?
//   is_active    Boolean @default(true)
//   is_delete    Boolean @default(false)
//   // account      Account?
// }

// // Bảng người dùng là nhà tuyển dụng
// model User_Recruiter {
//   id BigInt  @id @default(autoincrement())
//   company_name String  @unique
//   email        String?
//   number_phone String?
//   address      String?
//   city_id      Int?
//   district_id  Int?
//   ward_id      Int?
//   avartar      String? // logo
//   is_active    Boolean @default(true)
//   is_delete    Boolean @default(false)
//   // account      Account?
// }
//RECRUITER

// // Bảng người dùng là loại người dùng
// model User_Manager {
//   id   BigInt  @id @default(autoincrement())
//   first_name   String
//   last_name    String
//   full_name    String
//   email        String?
//   number_phone String?
//   age          Int?
//   gender       Int?
//   address      String?
//   city_id      Int?
//   district_id  Int?
//   ward_id      Int?
//   avartar      String?
//   // account      Account?
// }

// Loại công việc , Part Time , Full Time , Bao nhiêu kinh nghiệm
model Job_Type {
  id                        BigInt                      @id @default(autoincrement())
  job_type_name             String                      @unique
  is_active                 Boolean                     @default(true)
  is_delete                 Boolean                     @default(false)
  create_date               DateTime                    @default(now())
  create_user               String
  update_date               DateTime?
  update_user               String?
  delete_date               DateTime?
  delete_user               String?
  Recruitment_Post_Job_Type Recruitment_Post_Job_Type[]
}

// Chuyên ngành IT , Kế Toán
model Majors {
  id                      BigInt                    @id @default(autoincrement())
  majors_name             String                    @unique
  is_active               Boolean                   @default(true)
  is_delete               Boolean                   @default(false)
  create_date             DateTime                  @default(now())
  create_user             String
  update_date             DateTime?
  update_user             String?
  delete_date             DateTime?
  delete_user             String?
  Recruitment_Post_Majors Recruitment_Post_Majors[]
}

//Ngành nghề
model Job {
  job_id      BigInt    @id @default(autoincrement())
  job_name    String
  is_active   Boolean   @default(true)
  is_delete   Boolean   @default(false)
  create_date DateTime  @default(now())
  create_user String
  update_date DateTime?
  update_user String?
  delete_date DateTime?
  delete_user String?
}

model Apply_Profile {
  profile_id   BigInt       @id @default(autoincrement())
  profile_name String
  profile_link String? // Đường dẫn của hồ sơ được lưu trữ
  is_active    Boolean      @default(true)
  is_delete    Boolean      @default(false)
  create_date  DateTime     @default(now())
  create_user  String
  update_date  DateTime?
  update_user  String?
  delete_date  DateTime?
  delete_user  String?
  user_id      BigInt
  user         User_Account @relation(fields: [user_id], references: [id])
}

model Recruitment_Post {
  id                BigInt                      @id @default(autoincrement())
  content           String                      @db.NVarChar(4000)
  title             String
  recuiter_id       BigInt
  user              User_Account                @relation(fields: [recuiter_id], references: [id])
  to_value          BigInt                      @default(0)
  from_value        BigInt?                     @default(0)
  gender            Int?
  address           String?
  province_code     String?
  district_code     String?
  ward_code         String?
  create_date       DateTime?                   @default(now())
  create_user       String?
  update_date       DateTime?
  update_user       String?
  delete_date       DateTime?
  delete_user       String?
  is_delete         Boolean                     @default(false)
  is_active         Boolean                     @default(true)
  post_job_types    Recruitment_Post_Job_Type[]
  post_majors       Recruitment_Post_Majors[]
  History_Apply_Job History_Apply_Job[]
}

model History_Apply_Job {
  id               BigInt           @id @default(autoincrement())
  user_id          BigInt //  | 
  post_id          BigInt //  | => cả 3 ID này sẽ được lưu lại khi người ứng viên
  cv_id            BigInt //  | ứng tuyển vào bài post
  user_account     User_Account     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Recruitment_Post Recruitment_Post @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cv               cv               @relation(fields: [cv_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  create_date      DateTime         @default(now())
  create_user      String
  update_date      DateTime?
  update_user      String?
  delete_date      DateTime?
  delete_user      String?
  is_delete        Boolean          @default(false)
  is_active        Boolean          @default(true)

  @@unique([cv_id, post_id, user_id])
}

model Recruitment_Post_Job_Type {
  id          BigInt           @id @default(autoincrement())
  post_id     BigInt // | 1 bài viết sẽ có nhiều loại công việc
  post        Recruitment_Post @relation(fields: [post_id], references: [id])
  job_type_id BigInt // |  => Nhiều dòng dữ liệu group by theo bài post
  job_type    Job_Type         @relation(fields: [job_type_id], references: [id])
  create_date DateTime?        @default(now())
  create_user String?
  update_date DateTime?
  update_user String?
  delete_date DateTime?
  delete_user String?
  is_delete   Boolean          @default(false)
  is_active   Boolean          @default(true)

  @@unique([post_id, job_type_id])
}

model Recruitment_Post_Majors {
  id          BigInt           @id @default(autoincrement())
  post_id     BigInt // | 1 bài viết sẽ có nhiều loại công việc
  post        Recruitment_Post @relation(fields: [post_id], references: [id])
  majors_id   BigInt // |  => Và giành cho nhiều ngành 
  majors      Majors           @relation(fields: [majors_id], references: [id])
  create_date DateTime?        @default(now())
  create_user String?
  update_date DateTime?
  update_user String?
  delete_date DateTime?
  delete_user String?
  is_delete   Boolean          @default(false)
  is_active   Boolean          @default(true)

  @@unique([post_id, majors_id])
}

model Recruitment_Post_Image {
  id        BigInt   @id @default(autoincrement())
  post_id   BigInt?
  user_id   BigInt?
  url_image String?
  is_active Boolean?
  is_delete Boolean
}

// để lưu hồ sơ ứng tuyển
model cv {
  id                BigInt              @id @default(autoincrement())
  file_name_hash    String // Lưu tên file đã được hash và lưu trên cdn
  file_name         String // Lưu tên file nguyên bản của tập tin
  user_id           BigInt
  extname           String?
  user              User_Account        @relation(fields: [user_id], references: [id])
  create_date       DateTime            @default(now())
  create_user       String?
  is_active         Boolean             @default(true)
  is_delete         Boolean             @default(false)
  History_Apply_Job History_Apply_Job[]
}

model administrative_regions {
  id           Int         @id
  name         String
  name_en      String
  code_name_en String?
  code_name    String?
  provinces    provinces[]
}

model administrative_units {
  id            Int         @id
  full_name     String?
  full_name_en  String?
  short_name    String
  short_name_en String?
  code_name     String
  code_name_en  String?
  provinces     provinces[]
  districts     districts[]
  wards         wards[]
}

model provinces {
  id                      BigInt                  @id @default(autoincrement())
  code                    String                  @unique
  name                    String
  name_en                 String?
  full_name               String
  full_name_en            String?
  code_name               String?
  administrative_units    administrative_units?   @relation(fields: [administrative_unit_id], references: [id])
  administrative_unit_id  Int?
  administrative_regions  administrative_regions? @relation(fields: [adminstrative_region_id], references: [id])
  adminstrative_region_id Int?
  districts               districts[]
}

model districts {
  id                     BigInt               @id @default(autoincrement())
  code                   String               @unique
  name                   String
  name_en                String?
  full_name              String?
  full_name_en           String?
  code_name              String?
  administrative_units   administrative_units @relation(fields: [administrative_unit_id], references: [id])
  administrative_unit_id Int
  provinces              provinces            @relation(fields: [province_code], references: [code], onDelete: NoAction, onUpdate: NoAction)
  province_code          String
  wards                  wards[]
}

model wards {
  id            BigInt    @id @default(autoincrement())
  code          String
  name          String
  name_en       String?
  full_name     String
  full_name_en  String?
  code_name     String?
  districts     districts @relation(fields: [district_code], references: [code], onDelete: NoAction, onUpdate: NoAction)
  district_code String

  administrative_units   administrative_units @relation(fields: [administrative_unit_id], references: [id])
  administrative_unit_id Int
}
